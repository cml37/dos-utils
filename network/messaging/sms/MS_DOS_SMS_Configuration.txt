================================================================================================================
Preconditions
================================================================================================================
You have set up a Raspberry Pi, enabled SSH, and set the pi hostname to "chatpi".  
  See my instructions here for an example: https://github.com/cml37/dos-utils/blob/master/config/my_raspberrypi_setup_instructions.txt

================================================================================================================
Installing Prosody
================================================================================================================
Prosody is an XMPP server

Install prosody
  sudo apt-get install prosody

At this point, you need to pick a virtual server name for your XMPP server.  
The virtual server name MUST have a suffix, or it won't work with MAXS Android Client:
(Some notes on DNS and Prosody for the insomniac: https://prosody.im/doc/dns)
  * If your network automatically adds a DNS suffix (like Google Wifi), then this is easy: just go with chatpi.<your_suffix>
    * To find the suffix, do a "ping chatpi" and see what comes back.  Example:
        C:\Users\chris>ping chatpi
        Pinging chatpi.lan [192.168.1.150] with 32 bytes of data:
    * In this case, my suffix is .lan, and I will go with chatpi.lan for my virtual server name
  * If your network doesn't add a suffix, you can try the default ".local" suffix, which should work
    * NOTE: While this approach should work, it will result in multicast DNS resolution and is not guaranteed to be unique on a network
      * As such, it's best to only use this method for initial testing and/or proof of concept, and then switch to another method
    * To test, do a "ping chatpi.local" and see what comes back.  Example:
        C:\Users\chris>ping chatpi.local
        Pinging chatpi.local [abcd::abcd:ab1:abcd:50fc%6] with 32 bytes of data:
    * In this case, my suffix is .local, and I will go with chatpi.local for my virtual server name
  * If your network doesn't add a suffix, and ."local" doesn't resolve, you can usually "cheat" and try to use a custom suffix (we can try ".localnet")
    * sudo vi /etc/hosts
    * Add a line like this:
      127.0.0.1       chatpi.localnet
    * If you plan to use windows clients, you might want to modify windows DNS settings as well
      * Run notepad as administrator
      * Open C:\windows\System32\drivers\etc\hosts
      * Add a line like this, using the address of the Raspberry Pi (do a ping chatpi to get the address):
        192.168.1.150   chatpi.localnet
    * In this case, my suffix is .localnet, and I will go with chatpi.localnet for my virtual server name
  * If your are an advanced user and want to use a service like afraid.org to have a dynamic DNS entry, you are on your own :-) 

Update sample configuration with your newly chosen virtual server name
  sudo nano /etc/prosody/prosody.cfg.lua
  Update virtualhost to be chatpi.<your_suffix> (i.e. chatpi.lan or chatpi.local based on our discussion above)

Create some accounts.  Be sure to use your virtual server name which has <your_suffix>!!
(Reference: https://prosody.im/doc/creating_accounts)
  Create an account for "you"
   sudo prosodyctl adduser pi@chatpi.<your_suffix>  
  Create an account for your MAXS Android client as well
   sudo prosodyctl adduser maxs@chatpi.<your_suffix>  

Create a certificate.  Be sure to use your virtual server name which has <your_suffix>!!
(Reference: certificates: https://prosody.im/doc/certificates)
  sudo prosodyctl cert generate chatpi.<your_suffix>
  (just press enter for the prompts)
  sudo nano /etc/prosody/prosody.cfg.lua
  add an SSL block similar to the below, pointing to your key and cert based on <your_suffix>

   ssl = {
     key = "/var/lib/prosody/chatpi.<your_suffix>.key";
     certificate = "/var/lib/prosody/chatpi.<your_suffix>.crt";
   }

Restart the service
  sudo service prosody restart

================================================================================================================
Installing BitlBee
================================================================================================================
BitlBee is an IRC to XMPP gateway, amongst other things!
https://wiki.bitlbee.org/GettingStarted

Install BitlBee
  sudo apt-get install bitlbee

Start BitlBee
  sudo /etc/init.d/bitlbee restart
  If you want bitlbee to start on system reboot you can add the above "restart line to /etc/rc.local as well

That's it!  If only everything in life were this simple...


================================================================================================================
Installing MAXS
================================================================================================================
MAXS is an XMPP Service that acts as client to XMPP Servers.
Reference: http://projectmaxs.org/documentation/introduction.html

Import CA certificate from the Raspberry Pi that was generated by Prosody
-- Copy the certificate to a location where you can access it and make it readable
   sudo cp /var/lib/prosody/chatpi.<your_suffix>.crt /tmp
   sudo chmod 777 /tmp/chatpi.<your_suffix>.crt
-- Get the certificate to your phone (you can launch a webmail/Gmail browser from Chromium and email it to your phone)
  -- Location on Raspberry Pi: /tmp/chatpi.<your_suffix>.crt
-- Once delivered to your phone via email, click on the attachment, and this should prompt installation of the certificate
  -- You have may to secure your device with screenlock if not already set
  -- Give the cert a new, i.e. "chatpi", and then you should be set
  -- On newer Android you might have to save it to local storage and install it via:
     Settings -> Security & privacy -> More security settings -> Encryption & credentials -> Install a certificate -> CA Certificate

Install F-Droid to assist with getting packages on your Android device
  Open a browser on your Android device and navigate to f-droid.org
  Download and install F-Droid
  (chances are good that you will have to accept some security prompts to allow installation)

Launch F-Droid on the Android device
  Install MAXS Main via F-Droid 
  Launch MAXS  Main (NOTE: YOU MUST LAUNCH IT AT LEAST ONCE BEFORE INSTALLING MODULES!!)
  Accept all permissions
  Close the application, relaunch the application, and make sure that MAXS Permission Integrity shows (OK)
    (I've found that you need to exit the application to get this to refresh, or sometimes do a "force stop" on the app)

After you have successfully launched MAXS main once you can now install additional modules that you will need for this exercise
  Launch F-Droid and install the following modules
    * MAXS Module ContactsRead
    * MAXS Module PhonestateRead
    * MAXS Module SmsNotify
    * MAXS Module SmsRead
    * MAXS Module SmsSend
    * MAXS Module SmsWrite
    * MAXS Transport XMPP

Launch MAXS Main 
  Address all warnings about permissions by granting permissions
  Close the application, relaunch the application, and make sure that MAXS Permission Integrity shows (OK) 
    (I've found that you need to exit the application to get this to refresh, or sometimes do a "force stop" on the app)
  Click on Discover Components
  Click on Modules and make sure that the installed modules appear in the list
  NOTE: If no modules are detected, you need to "reinstall" them.  The best way I have found to do this sadly is to go to f-droid.org in the browser, 
        search for MAXS using the "Find Apps" searchbar, click on the module to install, scroll down to find the latest version of the module, 
        download the APK, and open it to install it.  Repeat this for each module.
        As to why the f-droid app won't let you reinstall an app, I have no idea..

Add a Master Address that will allow other users to send commands to the phone
  Click on the More button next to XMPP Transport
  Click the plus icon to add a Master Address
  Based on earlier steps, this will be pi@chatpi.<your_suffix>
   (NOTE: we've found that adding multiple Master Addresses can cause issues with SMS relay for incoming messages, your mileage may vary)

Add a device account and password
  Based on earlier steps, this would be maxs@chatpi.<your_suffix>
  After adding, click on Advanced Settings and turn off Hostname Verification
  Also, if you had to create your own suffix (and perhaps if you used the .local suffix), you need to change some other Advanced Settings
    Click on Advanced Settings
    Click on Manual service settings to enable the settings
    Then click on the "line" under Manual sevice settings called... wait for it... Manual service settings
    Change host to be chatpi (or perhaps reference it by IP address if you end up with connection errors)
    Change XMPP Service name to be chatpi.<your_suffix>    
  Return to the main screen and click "Start Service"
Verify that you see "connected" in the status under XMPP Transport at the top

If desired, configure MAXS to start on device boot and/or MAXS launch
  Advanced Settings
  Start/Stop Options
  Check "Connect on completed boot"
  Check "Connect if MAXS is opened"
  

================================================================================================================
Installing, configuring, and running IRCJr
================================================================================================================
Download mTCP: http://www.brutman.com/mTCP/

Follow my mTCP Setup guide: https://github.com/cml37/dos-utils/blob/master/network/mtcp/target_system/mtcp.txt
Edit tcp.cfg and add some IRCJR specific parameters:
 IRCJR_NICK <nickname>
 IRCJR_USER <any old username>
 IRCJR_NAME <any old name>

Launch IRCJr, passing in your virtual host name
  Example: ircjr chatpi

You'll now be connected to BitlBee.  Add an account for you and associate the MAXS user with your account
  register
  /oper <nickname> <your_password>
  account add jabber pi@chatpi.<your_suffix>
  /oper pi@chatpi.<your_suffix> <acccount_password>
  account on

Send a test message (be sure to put two spaces after the contact name)
  /msg maxs sms send <number/contact>  Hello!
^^ note how you need to separate with two spaces 